datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int       @id @unique @default(autoincrement())
  name     String
  email    String    @unique
  password String
  role     Role      @default(USER)
  address  Address[]
  orders   Order[]
  reviews  Review[]
}

model Address {
  id         Int     @id @unique @default(autoincrement())
  street     String
  city       String
  postalCode String
  country    String
  user       User    @relation(fields: [userId], references: [id])
  userId     Int
  order      Order[]

  @@index([userId])
}

model Product {
  id            Int          @id @unique @default(autoincrement())
  name          String
  description   String?
  price         Float
  image         String
  category      Category     @relation(fields: [categoryId], references: [id])
  categoryId    Int
  meta          Meta[]
  attributes    Attribute[]
  reviews       Review[]
  orders        Order[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  subCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId Int?

  @@index([categoryId])
  @@index([subCategoryId])
}

model Category {
  id            Int           @id @unique @default(autoincrement())
  name          String        @unique
  products      Product[]
  meta          Meta[]
  subCategories SubCategory[]
}

model SubCategory {
  id         Int       @id @unique @default(autoincrement())
  name       String    @unique
  products   Product[]
  meta       Meta[]
  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?

  @@index([categoryId])
}

model Attribute {
  id        Int     @id @unique @default(autoincrement())
  name      String
  value     String
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@index([productId])
}

model Review {
  id        Int      @id @unique @default(autoincrement())
  title     String
  body      String
  rating    Int
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  productId Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
  @@index([userId])
}

model Order {
  id        Int       @id @unique @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  address   Address[]
  products  Product[]
  userId    Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([userId])
}

model Currency {
  id    Int    @id @unique @default(autoincrement())
  name  String
  value String
}

// TODO: Add more meta configurations dynamically!
model Meta {
  id            Int         @id @unique @default(autoincrement())
  title         String      @unique
  name          String
  content       String
  product       Product?     @relation(fields: [productId], references: [id])
  productId     Int?
  category      Category?    @relation(fields: [categoryId], references: [id])
  categoryId    Int?
  subCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  subCategoryId Int?

  @@index([productId])
  @@index([categoryId])
  @@index([subCategoryId])
}

enum Role {
  ADMIN
  USER
}
